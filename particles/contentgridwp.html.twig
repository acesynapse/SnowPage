{% extends '@nucleus/partials/particle.html.twig' %}

{% block stylesheets %}
{% if particle.particle_title_color or particle.particle_title_fontsize or particle.title_color or particle.title_fontsize or particle.subtitle_color or particle.subtitle_fontsize or (particle.parallax_image and particle.container_maxwidth == 'custom' and particle.bg_container_width is not empty) %}
<style>
{% if particle.grid_parallax and particle.grid_masonry %}
.{{id}} {box-sizing: initial;}
{% endif %}
{% if particle.particle_title_color or particle.particle_title_fontsize %}
#{{ id }}.g5-title { {% if particle.particle_title_color %}color: {{ particle.particle_title_color }};{% endif %}{% if particle.particle_title_fontsize %}font-size: {{particle.particle_title_fontsize}}px;{% endif %} }
{% endif %}
{% if particle.customize_title_color or particle.customize_title_fontsize %}
#{{ id }} .tm-title { {% if particle.customize_title_color %}color: {{particle.customize_title_color}}; {% endif %}{% if particle.customize_title_fontsize %}font-size: {{particle.customize_title_fontsize}}px;{% endif %} }
{% endif %}
{% if particle.customize_content_color or particle.customize_content_fontsize %}
#{{ id }} .tm-content { {% if particle.customize_content_color %}color: {{particle.customize_content_color}} !important;{% endif %}{% if particle.customize_content_fontsize %} font-size: {{particle.customize_content_fontsize}}px;{% endif %} }
{% endif %}
{% if particle.meta_color or particle.meta_fontsize %}
#{{ id }} .tm-meta li span, #{{ id }} .tm-meta li a { {% if particle.meta_color %}color: {{particle.meta_color}};{% endif %}{% if particle.meta_fontsize %} font-size: {{particle.meta_fontsize}}px;{% endif %} }
{% endif %}
{% if particle.parallax_image and particle.container_maxwidth == 'custom' and particle.bg_container_width is not empty %}
#{{ id }}-particle .g-container {
    max-width: {{ particle.bg_container_width|e }};
}
{% endif %}
</style>
{% endif %}
{% endblock %}

{% block javascript %}
{% if (particle.animation == 'parallax' or particle.bg_image_effect == 'parallax') %}
    <script src="{{ url('gantry-theme://uikit/js/parallax.min.js') }}"></script>
{% endif %}
{% endblock %}

{% set attr_extra = particle.extra|attribute_array %}
{% set post_settings = particle.post %}
{% set filter = post_settings.filter %}
{% set sort = post_settings.sort %}
{% set limit = post_settings.limit %}
{% set start = limit.start + max(0, ajax.start|int) %}
{% set display = post_settings.display %}

{# Sticky Posts #}
{% set sticky_posts = filter.sticky ? false : true %}

{# Query Posts #}
{% set query_parameters = {
    'posts_per_page': limit.total|default('-1'),
    'offset': start,
    'orderby': sort.orderby,
    'order': sort.ordering,
    'ignore_sticky_posts': sticky_posts
} %}

{% if filter.posts %}
    {% set query_parameters = query_parameters|merge({'post__in': filter.posts|replace({' ': ',', ', ': ','})|split(',')}) %}
{% else %}
    {% set query_parameters = query_parameters|merge({'cat': filter.categories|replace({' ': ',', ', ': ','})}) %}
{% endif %}

{% set posts = wordpress.query_posts(query_parameters) %}
{% set total = posts.get_pagination([]).total|abs %}
{% set total = max(posts|length, (total * max(0, limit.total))) %}

{# Set Title #}
{% if particle.style == 'blank' %}
{% set card_title_style = particle.title_style != 'default' ? ' uk-' ~ particle.title_style|e ~ '' : '' %}
{% else %}
{% set card_title_style = particle.title_style != 'default' ? ' uk-' ~ particle.title_style|e ~ '' : ' uk-card-title' %}
{% endif %}

{% set title_hover = (particle.title_hover != 'reset' ? ' class="'~ (particle.title_hover == 'heading' ? 'uk-link-'~ particle.title_hover ~'' : 'uk-link') ~'"') %}

{% set title_text_color = particle.title_color != 'default' ? ' uk-text-' ~ particle.title_color|e ~ '' %}
{% set title_decoration = particle.title_decoration != 'none' ? ' uk-heading-' ~ particle.title_decoration|e ~ '' %}
{% set title_margin = ' uk-margin-' ~ (particle.title_margin_top == 'default' ? 'top' : particle.title_margin_top|e ~ '-top') %}
{% set title_text_transform = particle.title_text_transform ? ' uk-text-' ~ particle.title_text_transform|e ~ '' %}
{% set title_font_weight = particle.title_font_weight ? ' uk-text-' ~ particle.title_font_weight|e ~ '' %}

{% set title_cls = card_title_style ~ title_text_color ~ title_margin ~ title_decoration ~ title_text_transform ~ title_font_weight %}

{# Set Title columns/rows gap #}
{% set title_grid_column_gap = particle.title_grid_column_gap != 'default' ? ' uk-grid-column-' ~ particle.title_grid_column_gap ~ '' %}
{% set title_grid_row_gap = particle.title_grid_row_gap != 'default' ? ' uk-grid-row-' ~ particle.title_grid_row_gap ~ '' %}
{% set title_grid_breakpoint = particle.title_grid_breakpoint ? '@' ~ particle.title_grid_breakpoint|e ~ '' %}

{% if ( particle.title_grid_column_gap == particle.title_grid_row_gap ) and not (particle.title_grid_column_gap == 'default' and particle.title_grid_row_gap == 'default') %}
    {% set title_grid_cr_gap = ' uk-grid-' ~ particle.title_grid_column_gap ~ '' %}
{% else %}
    {% set title_grid_cr_gap = title_grid_column_gap ~ title_grid_row_gap %}
{% endif %}

{# Set Meta Style #}
{% set meta_style = particle.meta_styles == 'list' and particle.meta_subnav_style != 'default' ? ' uk-subnav-' ~ particle.meta_subnav_style|e ~ '' %}
{% set meta_margin = ' uk-margin-' ~ (particle.meta_margin_top == 'default' ? 'top' : particle.meta_margin_top|e ~ '-top') %}
{% set meta_text_color = particle.pre_meta_color != 'default' ? ' uk-text-' ~ particle.pre_meta_color|e ~ '' %}
{% set meta_text_transform = particle.meta_text_transform and particle.meta_styles != 'list' ? ' uk-text-' ~ particle.meta_text_transform|e ~ '' %}
{% set meta_cls = meta_style ~ meta_text_color ~ meta_margin ~ meta_text_transform %}

{# Set Content Style #}
{% set content_style = particle.content_style != 'default' ? particle.content_style in ['lead', 'meta'] ? ' uk-text-' ~ particle.content_style|e : ' uk-' ~ particle.content_style|e %}
{% set content_text_color = particle.content_text_color != 'default' ? ' uk-text-' ~ particle.content_text_color|e ~ '' %}
{% set content_margin = ' uk-margin-' ~ (particle.content_margin_top == 'default' ? 'top' : particle.content_margin_top|e ~ '-top') %}
{% set content_dropcap = particle.content_dropcap ? ' uk-dropcap' %}
{% set content_column %}
{% if particle.content_column %} uk-column-{{particle.content_column|e}}{% if particle.content_column_breakpoint %}@{{particle.content_column_breakpoint|e}}{% endif %}{% if particle.content_column_divider %} uk-column-divider{% endif %}{% endif %}
{% endset %}
{% set content_text_transform = particle.content_text_transform ? ' uk-text-' ~ particle.content_text_transform|e ~ '' %}

{% set content_cls = content_style ~ content_text_color ~ content_text_transform ~ content_margin ~ content_dropcap ~ content_column %}

{# Set Masonry/Parallax/Scrollspy #}
{% set grid_masonry = particle.grid_masonry ? 'masonry: 1;' %}
{% set grid_parallax = particle.grid_parallax ? 'parallax: ' ~ particle.grid_parallax ~ ';' %}

{# Set Viewport Height #}
{% if particle.viewport_height == 'full' %}
    {% set viewport_height = ' uk-height-viewport="offset-top: true;"' %}
{% elseif particle.viewport_height == 'percent' %}
    {% set viewport_height = ' uk-height-viewport="offset-top: true; offset-bottom: 20;"' %}
{% elseif particle.viewport_height == 'section' %}
    {% set viewport_height = ' uk-height-viewport="offset-top: true; offset-bottom: 50;"' %}
{% elseif particle.viewport_height == 'expand' %}
    {% set viewport_height = ' uk-height-viewport="expand: true;"' %}
{% endif %}

{# Set Padding #}
{% if particle.padding == 'default' %}
    {% set padding = ' uk-section' %}
{% elseif particle.padding == 'none' %}
    {% set padding = ' uk-section uk-padding-remove-vertical' %}
{% else %}
    {% set padding = ' uk-section uk-section-' ~ particle.padding|e ~ '' %}
{% endif %}

{# Set Background color #}
{% set parallax_bg_color = particle.parallax_bg_color ? 'style="background-color: ' ~ particle.parallax_bg_color ~ ';"' %}
{% set parallax_overlay = (particle.parallax_bg_overlay ? '<div class="uk-position-cover" style="background-color: '~ particle.parallax_bg_overlay ~';"></div>') %}

{# Set Max-Width Content #}
{% set content_maxwidth %}
{% if particle.g_maxwidth != 'inherit' %} uk-width-{{particle.g_maxwidth}}{% if particle.g_maxwidth_breakpoint != 'always' %}@{{particle.g_maxwidth_breakpoint}}{% endif %}{% if particle.g_maxwidth_alignment == 'left' %}{% elseif particle.g_maxwidth_alignment == 'center' %} uk-margin-auto{% else %} uk-margin-auto-left{% endif %}{% endif %}
{% endset %}

{# Start Background Wrapper #}
{% set parallax_background %}
{% if particle.parallax_image %}
{% set bg_container_maxwidth = particle.container_maxwidth == 'custom' or particle.container_maxwidth == 'default' ? 'g-container' : 'uk-container' ~ (particle.container_maxwidth in ['small', 'large', 'xlarge', 'expand'] ? ' uk-container-' ~ particle.container_maxwidth|e) %}
{% if (particle.bg_image_effect == 'parallax' and (particle.horizontal_start or particle.horizontal_end or particle.vertical_start or particle.vertical_end or particle.parallax_easing)) %}
{% set parallax_bg_horizontal %}
{% if particle.horizontal_start or particle.horizontal_end %}bgx: {% if particle.horizontal_start is empty %}0{% else %}{{particle.horizontal_start }}{% endif %},{% if particle.horizontal_end is empty %}0{% else %}{{particle.horizontal_end }}{% endif %};{% endif %}
{% endset %}
{% set parallax_bg_vertical %}
{% if particle.vertical_start or particle.vertical_end %}bgy: {% if particle.vertical_start is empty %}0{% else %}{{ particle.vertical_start }}{% endif %},{% if particle.vertical_end is empty %}0{% else %}{{ particle.vertical_end }}{% endif %};{% endif %}
{% endset %}
{% set parallax_easing = particle.parallax_easing ? 'easing:' ~ particle.parallax_easing / 10 ~ '' %}
{% set bgp_animation_cls = ' uk-parallax="' ~ parallax_bg_horizontal ~ parallax_bg_vertical ~ (particle.parallax_bg_breakpoint != 'always' ? ' media: @'~ particle.parallax_bg_breakpoint ~'' : '') ~ parallax_easing ~ '"' %}
{% endif %}
<div data-src="{{ url(particle.parallax_image)|e }}" uk-img class="uk-wrapper uk-background-norepeat{{ particle.parallax_bg_overlay ? ' uk-position-relative' : '' }}{{ particle.bg_image_effect == 'fixed' ? ' uk-background-fixed' : '' }}{{ padding }} uk-background-{{particle.background_image_position|e}}{% if particle.background_image_size != 'auto' %} uk-background-{{particle.background_image_size|e}}{% endif %}{% if particle.parallax_bg_visibility != 'always' %} uk-background-image@{{particle.parallax_bg_visibility|e}}{% endif %}{% if particle.vertical_alignment != 'none' %} uk-flex uk-flex-{{particle.vertical_alignment|e}}{% endif %}{% if particle.parallax_text_color != 'default' %} uk-{{particle.parallax_text_color|e}}{% endif %}{% if particle.blendmode != 'inherit' %} uk-background-blend-{{particle.blendmode|e}}{% endif %}" {{parallax_bg_color|default('')|raw}}{{ bgp_animation_cls|raw }}{{viewport_height|raw}}>
{{ parallax_overlay|raw }}
    <div class="{{ bg_container_maxwidth }}{{ particle.parallax_bg_overlay ? ' uk-position-relative' : '' }}">
        <div class="el-content">
{% endif %}
{% endset %}
{# End Background Wrapper #}
{% set end_parallax_background %}
{% if particle.parallax_image %}
        </div>
    </div>
</div>
{% endif %}
{% endset %}

{# Set Horizontal #}
{% set pahorizontal %}
{% if particle.pa_horizontal_start or particle.pa_horizontal_end %}x: {% if particle.pa_horizontal_start == '' %}0{% else %}{{particle.pa_horizontal_start }}{% endif %},{% if particle.pa_horizontal_end == '' %}0{% else %}{{particle.pa_horizontal_end }}{% endif %};{% endif %}
{% endset %}

{# Set Vertical #}
{% set pavertical %}
{% if particle.pa_vertical_start or particle.pa_vertical_end %}y: {% if particle.pa_vertical_start == '' %}0{% else %}{{particle.pa_vertical_start }}{% endif %},{% if particle.pa_vertical_end == '' %}0{% else %}{{particle.pa_vertical_end }}{% endif %};{% endif %}
{% endset %}

{# Set Scale #}
{% set scale %}
{% if particle.scale_start or particle.scale_end %}scale: {% if particle.scale_start == '' %}1{% else %}{{particle.scale_start / 100 }}{% endif %},{% if particle.scale_end == '' %}1{% else %} {{particle.scale_end / 100 }}{% endif %};{% endif %}
{% endset %}

{# Set Rotate #}
{% set rotate %}{% if particle.rotate_start or particle.rotate_end %}
rotate: {% if particle.rotate_start == '' %}0{% else %}{{particle.rotate_start}}{% endif %},{% if particle.rotate_end == '' %}0{% else %}{{particle.rotate_end}}{% endif %};{% endif %}
{% endset %}

{# Set Opacity #}
{% set opacity %}
{% if particle.opacity_start or particle.opacity_end %}opacity: {% if particle.opacity_start == '' %}1{% else %}{{particle.opacity_start / 100 }}{% endif %},{% if particle.opacity_end == '' %}1{% else %}{{particle.opacity_end / 100 }}{% endif %};{% endif %}
{% endset %}

{# Set Scrollspy Animation #}
{% set scrollspy_cls = particle.animation != 'inherit' and particle.animation != 'parallax' ? ' uk-scrollspy-class' %}

{# Set Animation #}
{% set animation %}
{% if particle.animation != 'inherit' and particle.animation != 'parallax' %} uk-scrollspy="target: [uk-scrollspy-class]; cls: uk-animation-{{particle.animation|e}};{% if particle.animation_repeat == 'enabled' %} repeat: true;{% endif %} delay:{% if particle.delay_element_animations %} {{particle.animation_delay|default('200')|e}};{% else %} false;{% endif %}"
{% elseif particle.animation == 'parallax' %}
{% set pa_z_index = particle.pa_z_index ? ' uk-position-z-index uk-position-relative' %}
{% if particle.pa_horizontal_start or particle.pa_horizontal_end or particle.pa_vertical_start or particle.pa_vertical_end or particle.scale_start or particle.scale_end or particle.rotate_start or particle.rotate_end or particle.opacity_start or particle.opacity_end or particle.easing or particle.pa_viewport or particle.pa_breakpoint %} uk-parallax="{{pahorizontal}}{{pavertical}}{{scale}}{{rotate}}{{opacity}}{% if particle.easing == '' %}{% else %}easing: {{ particle.easing / 100 }};{% endif %}{% if particle.pa_viewport != '' %}viewport:{{ particle.pa_viewport / 100 }};{% endif %}{% if particle.pa_breakpoint != 'always' %}media: @{{particle.pa_breakpoint|e}}{% endif %}"{% endif %}
{% endif %}
{% endset %}

{# Set Particle Alignment #}
{% set particle_alignment %}
{% if particle.align != 'inherit' %} uk-text-{{particle.align|e}}{% if particle.breakpoint != 'always' %}@{{particle.breakpoint|e}}{% endif %}{% endif %}{% if particle.align != 'inherit' and particle.breakpoint != 'always' %}{% if particle.fallback != 'inherit' %} uk-text-{{particle.fallback|e}}{% endif %}{% endif %}
{% endset %}

{# Set Particle Alignment for Subnav style #}
{% set subnav_alignment %}
{% if particle.align != 'inherit' %} uk-flex-{{particle.align|e}}{% if particle.breakpoint != 'always' %}@{{particle.breakpoint|e}}{% endif %}{% endif %}{% if particle.align != 'inherit' and particle.breakpoint != 'always' %}{% if particle.fallback != 'inherit' %} uk-flex-{{particle.fallback|e}}{% endif %}{% endif %}
{% endset %}

{# set Particle Title Style #}
{% set particle_title_style %}
{% if particle.particle_title %}
<{{particle.particle_title_element|e}} id="{{ id }}" class="g5-title{% if particle.particle_title_align != 'inherit' %} uk-text-{{particle.particle_title_align|e}}{% endif %}{% if particle.particle_predefined_color != 'default' %} uk-text-{{particle.particle_predefined_color|e}}{% endif %}{% if particle.particle_title_style != 'default' %} uk-{{particle.particle_title_style|e}}{% endif %}{% if particle.particle_title_decoration != 'none' %} uk-heading-{{particle.particle_title_decoration|e}}{% endif %}{% if particle.particle_title_text_transform %} uk-text-{{particle.particle_title_text_transform|e}}{% endif %}{% if particle.particle_title_font_weight %} uk-text-{{particle.particle_title_font_weight|e}}{% endif %}">
{% if particle.particle_title_decoration == 'line' %} <span>{{ particle.particle_title|raw }}</span>
{% else %} {{ particle.particle_title|raw }}
{% endif %}
</{{particle.particle_title_element|e}}>
{% endif %}
{% endset %}

{# Set Image Width/Height #}
{% set image_width = particle.image_width ? ' width="' ~ particle.image_width ~ '"' %}
{% set image_height = particle.image_height ? ' height="' ~ particle.image_height ~ '"' %}
{% set img_padding = particle.image_padding and particle.style != 'blank' %}
{% set cover = img_padding and (particle.image_alignment == 'left' or particle.image_alignment == 'right') ? ' uk-cover' %}

{% set img_link = particle.link_card or particle.link_image %}
{% set check_img_transition = img_link and particle.image_transition != 'none' %}

{% set link_image_padding = (particle.link_image and particle.image_padding ? ' class="uk-display-block"') %}

{# Image Transition #}
{% set image_transition = img_link and particle.image_transition != 'none' ? ' uk-transition-' ~ particle.image_transition|e ~ ' uk-transition-opaque' %}

{% set link_transition = particle.link_card and particle.image_transition != 'none' ? ' uk-transition-toggle' %}
{% set link_image_transition = particle.link_card == false and particle.image_transition != 'none' ? ' uk-transition-toggle' %}

{# Image Box Shadow #}
{% set img_box_shadow = particle.style == 'blank' and particle.box_shadow != 'none' ? ' uk-box-shadow-' ~ particle.box_shadow|e ~ '' %}
{% set img_box_shadow_hover = img_link and particle.style == 'blank' and particle.box_shadow_hover != 'none' ? ' uk-box-shadow-hover-' ~ particle.box_shadow_hover|e ~ '' %}

{# Image Margin Top #}
{% if ( ( particle.image_alignment == 'bottom' and particle.image_padding == false ) or ( particle.style == 'blank' and particle.image_alignment == 'bottom' ) or particle.image_alignment == 'between' ) %}
{% set img_margin_top = ' uk-margin' ~ (particle.image_margin_top != 'default' ? '-' ~ particle.image_margin_top|e ~ '-top' : '-top') %}
{% endif %}

{# Image Border #}
{% if particle.style == 'blank' or ( particle.style != 'blank' and particle.image_padding == false ) or ( particle.style != 'blank' and particle.image_alignment == 'between' ) %}
{% set img_border_cls = particle.image_border != 'none' ? ' uk-border-' ~ particle.image_border|e ~ '' %}
{% endif %}

{# Set Button Size #}
{% set button_size = particle.link_button_size != 'default' ? ' uk-button-' ~ particle.link_button_size|e ~ '' %}

{# Set Button Class #}
{% if (display.read_more.button_styles == 'link' or display.read_more.button_styles == 'link-muted' or display.read_more.button_styles == 'link-text') %}
{% set button_cls = 'uk-' ~ display.read_more.button_styles|e ~ '' %}
{% else %}
{% set button_cls = 'uk-button uk-button-' ~ display.read_more.button_styles|e ~ button_size ~ '' %}
{% endif %}

{# Set Card Max Width Class #}
{% set card_maxwidth_cls = particle.card_maxwidth != 'none' ? ' uk-margin-auto uk-width-' ~ particle.card_maxwidth|e ~ '' %}

{% set image_grid_column_gap = particle.image_grid_column_gap != 'default' ? ' uk-grid-column-' ~ particle.image_grid_column_gap ~ '' %}
{% set image_grid_row_gap = particle.image_grid_row_gap != 'default' ? ' uk-grid-row-' ~ particle.image_grid_row_gap ~ '' %}

{% if ( particle.image_grid_column_gap == particle.image_grid_row_gap ) and not (particle.image_grid_column_gap == 'default' and particle.image_grid_row_gap == 'default') %}
    {% set image_grid_cr_gap = ' uk-grid-' ~ particle.image_grid_column_gap ~ '' %}
{% else %}
    {% set image_grid_cr_gap = image_grid_column_gap ~ image_grid_row_gap %}
{% endif %}

{% set image_grid_bp =  particle.image_grid_breakpoint != 'default' ? '@' ~ particle.image_grid_breakpoint|e ~ '' %}

{% set card_size =  particle.cardsize != 'default' ? ' uk-card-' ~ particle.cardsize|e ~ '' %}
{% set card_inverse = (particle.style == 'primary' or particle.style == 'secondary') and particle.link_card == false ? ' uk-light' %}
{% set inverse_item_link = (particle.style == 'primary' or particle.style == 'secondary') and particle.link_card == true ? ' uk-light' %}

{% set panel_cls = particle.style != 'blank' ? 'uk-card uk-card-' ~ particle.style|e ~ card_size ~ card_inverse ~ card_maxwidth_cls ~ '' : 'uk-panel' ~ card_maxwidth_cls ~ '' %}

{# Set Link Card html element #}
{% set link_card_element = particle.link_card ? 'a' : 'div' %}
{% set toggle_transition = particle.link_card ? ' uk-link-toggle' %}

{% if not (particle.style != 'blank' and particle.image_padding and particle.image_alignment in ['left', 'right'] ) %}
{% set flex_link = ' uk-display-block' %}
{% endif %}

{% set hover_cls = particle.link_card and particle.style != 'hover' and particle.style != 'blank' ? ' uk-card-hover' %}

{# New logic for card padding #}
{% if particle.card_padding is not empty and particle.style == 'blank' %}
{% set card_content_padding = 'uk-padding' ~ ( particle.card_padding == 'default' ? ' ' : '-' ~ particle.card_padding|e ~ ' ') %}
{% endif %}

{# Set Grid Content #}
{% set content_grid %}
{% for post in posts %}

{# Set Image Card #}
{% set media_card %}
{% if display.image.enabled and post.thumbnail.src %}
    {% if particle.link_image and particle.link_card == false %}
        <a{{link_image_padding|raw}} href="{{ post.link|raw }}"{% if particle.renderTitles %} title="{{ post.title }}"{% endif %} target="{{ particle.buttontarget|default('_self')|e }}">
    {% endif %}
    {% if img_link and particle.image_transition != 'none' %}
        <div class="uk-inline-clip{{ link_image_transition ~ img_border_cls ~ img_box_shadow ~ img_box_shadow_hover ~ img_margin_top }}">
    {% endif %}
    <img{{ image_width|raw }}{{ image_height|raw }} class="tm-image{{image_transition}}{% if check_img_transition == false %}{{ img_border_cls ~ img_box_shadow ~ img_box_shadow_hover ~ img_margin_top }}{% endif %}" src="{{ url(post.thumbnail.src) }}" alt="{{ (display.title.limit ? post.title|truncate_text(display.title.limit) : post.title)|raw }}"{{cover}}>
    {% if img_padding and (particle.image_alignment == 'left' or particle.image_alignment == 'right') %}
        <img{{ image_width|raw }}{{ image_height|raw }} class="tm-image uk-invisible{{image_transition}}" src="{{ url(post.thumbnail.src) }}" alt="{{ (display.title.limit ? post.title|truncate_text(display.title.limit) : post.title)|raw }}">
    {% endif %}
    {{ img_link and particle.image_transition != 'none' ? '</div>' : '' }}
    {{ particle.link_image and particle.link_card == false ? '</a>' : '' }}
{% endif %}
{% endset %}

{# Set Item Title #}
{% set item_title %}
{% if display.title.enabled %}
<{{particle.title_element|e}} class="tm-title uk-margin-remove-bottom{{ title_cls }}">
{% if particle.title_decoration == 'line' or (particle.link_card and particle.title_hover != 'reset') %}
<span{{ particle.link_card and particle.title_hover != 'reset' ? title_hover|raw : '' }}>
{% endif %}
{% if particle.link_title and particle.link_card == false %}
<a{{ title_hover|raw }} href="{{ post.link|raw }}"{% if particle.renderTitles %} title="{{ post.title }}"{% endif %} target="{{ particle.buttontarget|default('_self')|e }}">{{ (display.title.limit ? post.title|truncate_text(display.title.limit) : post.title)|raw }}</a>
{% else %}
{{ (display.title.limit ? post.title|truncate_text(display.title.limit) : post.title)|raw }}
{% endif %}
{% if particle.title_decoration == 'line' or (particle.link_card and particle.title_hover != 'reset') %}
</span>
{% endif %}
</{{particle.title_element|e}}>
{% endif %}
{% endset %}

{# Set Item Meta #}
{% set item_meta %}
{% if display.date.enabled or display.author.enabled or display.category.enabled or display.comments.enabled %}

{% if particle.meta_styles == 'list' %}
<ul class="tm-meta{{subnav_alignment}} uk-subnav{{ meta_margin ~ meta_cls }} uk-margin-remove-bottom">
{% if display.date.enabled %}
<li class="g-array-item-date">
<span class="g-array-item-date">
{% if display.date.enabled == 'modified' %}
{{ post.post_modified|date(display.date.format) }}
{% else %}
  {{ post.post_date|date(display.date.format) }}
{% endif %}
</span>
</li>
{% endif %}

{% if display.author.enabled %}
<li class="g-array-item-author">
  <span>{{ post.author.name|raw }}</span>
</li>
{% endif %}

{% if display.category.enabled %}
{% set category_link = display.category.enabled == 'link' %}
{%- set post_categories -%}
{% for category in post.categories %}
{%- if category_link and particle.link_card == false -%}
<a href="{{ category.link }}">
{{ category.title|raw }}
</a>
{%- else -%}
{{ category.title|raw }}
{%- endif -%}
{% if not loop.last %}{{ ','|trim }}{% endif %}
{% endfor %}
{%- endset -%}
<li class="g-array-item-category">
<span>{{ post_categories|raw }}</span>
</li>
{% endif %}

{% if display.comments.enabled %}
{%- set comment_count -%}
{%- if post.comment_count == '0' -%}
{{ __('No comments', 'gantry5') }}
{%- elseif post.comment_count == '1' -%}
{{ post.comment_count ~ ' ' ~ __('Comment', 'gantry5') }}
{%- else -%}
{{ post.comment_count ~ ' ' ~ __('Comments', 'gantry5') }}
{%- endif -%}
{%- endset -%}

<li class="g-array-item-comments">
  <span class="g-array-item-comments">{{ comment_count }}</span>
</li>
{% endif %}

</ul>
{% else %}
<p class="tm-meta uk-margin-remove-bottom uk-article-meta{{ meta_margin ~ meta_cls }}">
{% if display.author.enabled %}
    {{ particle.author_meta|default('Written by')|raw }} {{ post.author.name|raw }}
{% endif %}

{% if display.author.enabled and display.date.enabled %}
{% set meta_date = particle.date_meta|default('on')|raw %}
{% else %}
{% set meta_date = particle.date_meta|default('Written on')|raw %}
{% endif %}

{% if display.date.enabled %}
    {% if display.date.enabled == 'modified' %}
        {{ meta_date }} {{ post.post_modified|date(display.date.format) }}{{ '.'|trim }}
    {% else %}
        {{ meta_date }} {{ post.post_date|date(display.date.format) }}{{ '.'|trim }}
    {% endif %}
{% endif %}

{% if display.category.enabled %}
    {% set category_link = display.category.enabled == 'link' %}
    {%- set post_categories -%}
        {% for category in post.categories %}
            {%- if category_link and particle.link_card == false -%}
                <a href="{{ category.link }}">
                    {{ category.title|raw }}
                </a>
            {%- else -%}
                {{ category.title|raw }}
            {%- endif -%}
            {% if not loop.last %}{{ ','|trim }}{% endif %}
        {% endfor %}
    {%- endset -%}
    {{ particle.category_meta|default('Posted in')|raw }} {{ post_categories|raw }}
{% endif %}

{% if display.comments.enabled %}
    {%- set comment_count -%}
        {%- if post.comment_count == '0' -%}
            {{ __('No comments', 'gantry5') }}
        {%- elseif post.comment_count == '1' -%}
            {{ post.comment_count ~ ' ' ~ __('Comment', 'gantry5') }}
        {%- else -%}
            {{ post.comment_count ~ ' ' ~ __('Comments', 'gantry5') }}
        {%- endif -%}
    {%- endset -%}

    {{ comment_count }}
{% endif %}

</p>
{% endif %}

{% endif %}
{% endset %}

{# Set Item Content #}
{% set item_content %}
{% if display.text.type %}
{% set post_text = display.text.type == 'excerpt' ? post.post_excerpt : post.content %}
<div class="tm-content uk-panel{{ content_cls }}">
{% if display.text.formatting == 'text' %}
{{ post_text|truncate_text(display.text.limit)|raw }}
{% else %}
{{ post_text|truncate_html(display.text.limit)|raw }}
{% endif %}
</div>
{% endif %}
{% endset %}

{# Set Item Button #}
{% set item_button %}
    {% if display.read_more.enabled and display.read_more.label %}
    <div class="uk-margin-{{ particle.link_margin_top == 'default' ? 'top' : particle.link_margin_top|e ~ '-top' }}">
    {% if particle.link_card %}
    <div class="{{ button_cls }}">{{ display.read_more.label|default('') }}</div>
    {% else %}
    <a class="{{ button_cls }}" href="{{ post.link|raw }}"{% if particle.renderBtnTitles %} title="{{ (display.title.limit ? post.title|truncate_text(display.title.limit) : post.title)|raw }}"{% endif %} target="{{ particle.buttontarget|default('_self')|e }}">{{ display.read_more.label|default('') }}</a>
    {% endif %}
    </div>
    {% endif %}
{% endset %}

<div>

{% if particle.image_alignment == 'top' or particle.image_alignment == 'bottom' or particle.image_alignment == 'between' %}

{# Default Style #}

<{{link_card_element|raw}} class="{{ panel_cls }}{{ particle.image_padding == false and particle.style != 'blank' ? ' uk-card-body uk-margin-remove-first-child' : '' }}{{ hover_cls ~ link_transition ~ toggle_transition }}{% if particle.link_card %}{{ flex_link }}{% endif %}{% if item.item_class %} {{ item.item_class }}{% endif %}"{% if particle.link_card %} href="{{ post.link|raw }}"{% if particle.renderTitles %} title="{{ post.title }}"{% endif %} target="{{ particle.buttontarget|default('_self')|e }}"{% endif %}{{scrollspy_cls}}>

{% if particle.image_alignment == 'top' %}
    {{ img_padding ? '<div class="uk-card-media-top">' : '' }}
        {{ media_card }}
    {{ img_padding ? '</div>' : '' }}
{% endif %}

{% if img_padding %}
<div class="uk-card-body uk-margin-remove-first-child{{ inverse_item_link }}">
{% endif %}

{% if particle.card_padding is not empty and particle.style == 'blank' %}
<div class="{{ card_content_padding }}uk-margin-remove-first-child">
{% endif %}

{% if particle.title_align %}

<div class="uk-child-width-expand uk-margin-{{ particle.title_margin_top == 'default' ? 'top' : particle.title_margin_top|e ~ '-top' }}" uk-grid>

  <div class="uk-width-{{ particle.title_grid_width }}{{ title_grid_breakpoint|e }} uk-margin-remove-first-child">
{% endif %}

    {% if particle.meta_alignment == 'top' %}
        {{ item_meta }}
    {% endif %}

    {{ item_title }}

    {% if particle.meta_alignment == 'bottom' %}
        {{ item_meta }}
    {% endif %}

{% if particle.title_align %}
    </div>

    <div class="uk-margin-remove-first-child">
{% endif %}

    {% if particle.image_alignment == 'between' %}
        {{ media_card }}
    {% endif %}

    {% if particle.meta_alignment == 'above-content' %}
        {{ item_meta }}
    {% endif %}

    {{ item_content }}

    {% if particle.meta_alignment == 'content' %}
        {{ item_meta }}
    {% endif %}

    {{ item_button }}

{% if particle.title_align %}
  </div>

</div>
{% endif %}

{{ particle.card_padding is not empty and particle.style == 'blank' ? '</div>' : '' }}

{{ img_padding ? '</div>' : '' }}

{% if particle.image_alignment == 'bottom' %}
    {{ img_padding ? '<div class="uk-card-media-bottom">' : '' }}
        {{ media_card }}
    {{ img_padding ? '</div>' : '' }}
{% endif %}

</{{link_card_element|raw}}>

{# End Default Style #}

{% else %}

{# Grid Style #}

<{{link_card_element|raw}} class="{{ panel_cls }}{{ particle.image_padding == false and particle.style != 'blank' ? ' uk-card-body uk-margin-remove-first-child' : '' }}{{ hover_cls ~ link_transition ~ toggle_transition }}{% if not img_padding and particle.link_card %}{{ flex_link }}{% endif %}{% if img_padding %} uk-flex{% endif %}{% if item.item_class %} {{ item.item_class }}{% endif %}"{% if particle.link_card %} href="{{ post.link|raw }}"{% if particle.renderTitles %} title="{{ post.title }}"{% endif %} target="{{ particle.buttontarget|default('_self')|e }}"{% endif %}{{scrollspy_cls}}>

{% if display.image.enabled and post.thumbnail.src %}

<div class="uk-child-width-expand{% if img_padding %} uk-grid-collapse uk-grid-match{% else %}{{ image_grid_cr_gap }}{% endif %}{{ particle.image_vertical_alignment and not (particle.style != 'blank' and particle.image_padding ) ? ' uk-flex-middle' : '' }}" uk-grid>

<div class="uk-width-{{ particle.image_grid_width ~ image_grid_bp }}{% if particle.image_alignment == 'right' %} uk-flex-last{{ image_grid_bp }}{% endif %}">
{% if img_padding %}<div class="uk-card-media-{{ particle.image_alignment }} uk-cover-container" uk-toggle="cls: uk-card-media-{{ particle.image_alignment }} uk-card-media-top; mode: media; media: {{ image_grid_bp }}">{% endif %}
    {{ media_card }}
{{ img_padding ? '</div>' : '' }}
</div>

{% if ( particle.style == 'blank' and particle.card_padding is not empty) or ( particle.style != 'blank' and particle.image_padding ) %}
<div{% if particle.style != 'blank' and particle.image_padding and particle.image_vertical_alignment %} class="uk-flex uk-flex-middle"{% endif %}>
{% endif %}

<div class="{{ img_padding ? 'uk-card-body ' : '' }}{{ card_content_padding }}uk-margin-remove-first-child{{ inverse_item_link }}">

{% else %}

<div class="{{ ( particle.style != 'blank' ) ? 'uk-card-body ' : '' }}{{ card_content_padding }}uk-margin-remove-first-child{{ inverse_item_link }}">

{% endif %}

{% if particle.title_align %}

<div class="uk-child-width-expand uk-margin-{{ particle.title_margin_top == 'default' ? 'top' : particle.title_margin_top|e ~ '-top' }}" uk-grid>

  <div class="uk-width-{{ particle.title_grid_width }}{{ title_grid_breakpoint|e }} uk-margin-remove-first-child">

{% endif %}

    {% if particle.meta_alignment == 'top' %}
        {{ item_meta }}
    {% endif %}

    {{ item_title }}

    {% if particle.meta_alignment == 'bottom' %}
        {{ item_meta }}
    {% endif %}

    {% if particle.title_align %}

    </div>

    <div class="uk-margin-remove-first-child">

    {% endif %}

    {% if particle.meta_alignment == 'above-content' %}
        {{ item_meta }}
    {% endif %}

    {{ item_content }}

    {% if particle.meta_alignment == 'content' %}
        {{ item_meta }}
    {% endif %}

    {{ item_button }}

{% if particle.title_align %}

  </div>

</div>
{% endif %}

{% if display.image.enabled and post.thumbnail.src %}
</div>
{% if ( particle.style == 'blank' and particle.card_padding is not empty) or ( particle.style != 'blank' and particle.image_padding ) %}
</div>
{% endif %}
</div>
{% else %}
</div>
{% endif %}

</{{link_card_element|raw}}>

{# End Grid style #}

{% endif %}

</div>
{% endfor %}
{% endset %}

{# End Grid content #}

{% if ( particle.grid_column_gap == particle.grid_row_gap ) %}
    {% set grid_c_gap = (particle.grid_column_gap != 'default' and particle.grid_row_gap != 'default') ? ' uk-grid-' ~ particle.grid_column_gap ~ '' %}
{% else %}
    {% set grid_c_gap = ( particle.grid_column_gap != 'default' ) ? ' uk-grid-column-' ~ particle.grid_column_gap ~ '' %}
    {% set grid_r_gap = ( particle.grid_row_gap != 'default' ) ?  ' uk-grid-row-' ~ particle.grid_row_gap ~ '' %}
{% endif %}

{% set grid_cr_gap = grid_c_gap ~ grid_r_gap %}

{# Init Grid column layouts #}
{% set phone_portrait = particle.phone_portrait != 'auto' ? ' uk-child-width-1-' ~ particle.phone_portrait ~ '' : ' uk-child-width-auto' %}

{% if particle.phone_landscape != 'inherit' %}
{% set phone_landscape = particle.phone_landscape != 'auto' ? ' uk-child-width-1-' ~ particle.phone_landscape|e ~ '@s' : ' uk-child-width-auto@s' %}
{% endif %}

{% if particle.tablet_landscape != 'inherit' %}
{% set tablet_landscape = particle.tablet_landscape != 'auto' ? ' uk-child-width-1-' ~ particle.tablet_landscape|e ~ '@m' : ' uk-child-width-auto@m' %}
{% endif %}

{% if particle.desktop != 'inherit' %}
{% set desktop = particle.desktop != 'auto' ? ' uk-child-width-1-' ~ particle.desktop|e ~ '@l' : ' uk-child-width-auto@l' %}
{% endif %}

{% if particle.large_desktop != 'inherit' %}
{% set large_desktop = particle.large_desktop != 'auto' ? ' uk-child-width-1-' ~ particle.large_desktop|e ~ '@xl' : ' uk-child-width-auto@xl' %}
{% endif %}

{% set grid_column_cls = phone_portrait ~ phone_landscape ~ tablet_landscape ~ desktop ~ large_desktop %}

{% set center_columns = particle.center_columns ? ' uk-flex-center' %}
{% set center_rows = particle.center_rows ? ' uk-flex-middle' %}
{% set match_height = particle.grid_match_height ? ' uk-grid-match' %}
{% set grid_divider = particle.grid_column_gap != 'collapse' and particle.grid_row_gap != 'collapse' and particle.grid_divider ? ' uk-grid-divider' %}

{# Set Visibility #}
{% if particle.visibility != 'inherit' %}
{% set visibility = particle.visibility in ['s', 'm', 'l', 'xl'] ? ' uk-visible@' ~ particle.visibility|e : ' uk-' ~ particle.visibility|replace({'-': '@'}) ~ '' %}
{% endif %}

{# Set Margin #}
{% if particle.margin != 'inherit' %}
{% set margin = particle.margin != 'default' ? ' uk-margin-' ~ particle.margin|e : ' uk-margin' %}
{% endif %}

{% block particle %}
{% if particle.enabled %}
{{ parallax_background }}
{{ particle_title_style }}
<div id="{{ id }}" class="{{ id ~ content_maxwidth ~ grid_divider ~ match_height ~ grid_cr_gap ~ center_columns ~ center_rows ~ grid_column_cls ~ particle_alignment ~ pa_z_index ~ margin ~ visibility }}{% if particle.css.class %} {{ particle.css.class }}{% endif %}"{{ animation }} uk-grid="{{grid_masonry ~ grid_parallax}}" {{- attr_extra|raw }}>
    {{ content_grid }}
</div>
{% if total > limit.total and display.pagination_buttons %}
    <ul class="uk-pagination uk-margin">
      <li><a class="uk-link-toogle{{ start - limit.total < 0 ? ' uk-disabled' }}" data-id="{{ id }}" data-start="{{ max(0, start - limit.total) }}"><span class="uk-margin-small-right" uk-pagination-previous></span> Previous</a></li>
      <li class="uk-margin-auto-left"><a class="uk-link-toogle{{ start + limit.total >= total ? ' uk-disabled' }}" data-id="{{ id }}" data-start="{{ start + limit.total }}">Next <span class="uk-margin-small-left" uk-pagination-next></span></a></li>
    </ul>
{% endif %}
{{ end_parallax_background }}
{% endif %}
{% endblock %}

{% block javascript_footer %}
    {% if total > limit.total and display.pagination_buttons %}
        {% do gantry.load('jquery') %}
        <script>
            (function ($) {
                $(document).on('click', '.uk-link-toogle', function () {
                    var id = $(this).attr('data-id'),
                        start = $(this).attr('data-start'),
                        request = {
                            'action' : 'particle',
                            'outline' : {{ gantry.page.outline|json_encode|raw }},
                            'id'     : id,
                            'start'  : start,
                            'format' : 'json'
                        };
                    $.ajax({{ wordpress.call('admin_url', 'admin-ajax.php')|json_encode|raw }}, {
                        type        : 'GET',
                        data        : request,
                        indexValue  : id + '-particle',
                        success: function (response) {
                            if(response.html){
                                $('#' + this.indexValue).html(response.html);
                            } else {
                                // TODO: Improve error handling -- instead of replacing particle content, display flash message or something...
                                $('#' + this.indexValue).html(response.message);
                            }
                        },
                        error: function(response) {
                            // TODO: Improve error handling -- instead of replacing particle content, display flash message or something...
                            $('#' + this.indexValue).html('AJAX FAILED ON ERROR');
                        }
                    });
                    return false;
                });
            })(jQuery)
        </script>
    {% endif %}
{% endblock %}
